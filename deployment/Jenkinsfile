pipeline {
    environment {
        testingregistry = "knoxie2/products_api_testing"
        productionregistry = "knoxie2/products_api"
        registryCredential = 'knoxie2'
        dockerImage = ''
        HOME = '/tmp'

    } 
    agent any
    stages {
        stage('Development: Building Development image for Unit Tests') {
          when {
              branch 'development'
            }
            steps {
              script {
                dockerImage = docker.build testingregistry + ":latest"
              }
            }
        }
        
        stage('Development: Running Unit Tests') {
          when {
              branch 'development'
            }
            steps {
              script {
                docker.image("knoxie2/products_api_testing:latest").inside("""--entrypoint=''""") {
                  sh 'dotnet --version'
                  sh 'cd src/ProductsApi.Unittests'
                  sh 'dotnet test --logger "trx;LogFileName=unit_tests.xml"'
                }
              }
            }
        }
        
        stage('Staging: Building image for Staging') {
          when {
              branch 'staging'
            }
            steps {
              script {
                 dockerImage = docker.build productionregistry + ":latest" 
              }
            }
        }
        
        stage('Main: Building image for Production') {
          when {
              branch 'main'
            }
            steps {
              script {
                 dockerImage = docker.build productionregistry + ":latest" 
              }
            }
        }

        stage('Push image to Ducker Hub') {
           when {
              not {
                branch 'development'
              }
            }
            steps{    
              script {
                docker.withRegistry( '', registryCredential ) {
                  dockerImage.push()
                }
              }
            }
        }

        stage('Development: Remove Unused Development docker image') {
           when {
              branch 'development'
            }
            steps{
              sh "docker rmi $testingregistry:latest" 
            }
        }

        stage('Remove Unused Production docker image') {
           when {
              branch 'staging'
            }
            steps{
              sh "docker rmi $productionregistry:latest"
            }
        }

        stage('Deploy to Staging environment') {
          when {
              branch 'staging'
            }
            steps{
              ansiblePlaybook(credentialsId: 'swarm-manager', playbook: './deployment/playbooks/deploy-for-staging.yml',inventory: "${HOSTS}")
            }
        }
         stage('Deploy to Production environment') {
          when {
              branch 'main'
            }
            steps{
              ansiblePlaybook(credentialsId: 'swarm-manager', playbook: './deployment/playbooks/deploy-for-production.yml',inventory: "${HOSTS}")
            }
        }
        stage('CleanWorkspace') {
            steps {
                cleanWs()
            }
        }
    }
    //  post { 
    //     always { 
    //         cleanWs()
    //     }
    // }
}
